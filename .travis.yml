language: cpp
sudo: required

services:
  - docker

compiler:
  - gcc
  - clang

env:
  global:
    - BUILD=~/buildTmp
    - SRC=$TRAVIS_BUILD_DIR
  matrix:
    - SPLASHPARALLEL=ON  SPLASHMPI=ON
    - SPLASHPARALLEL=OFF SPLASHMPI=ON
    - SPLASHPARALLEL=OFF SPLASHMPI=OFF

script:
# compile libSplash and install
  - docker exec build /bin/bash -c "cd $BUILD && CXXFLAGS='-Werror' CXX=$CXX CC=$CC cmake -DCMAKE_BUILD_TYPE=Debug -DTOOLS_MPI=$SPLASHMPI $SRC"
  - docker exec build /bin/bash -c "cd $BUILD && make package"
  - docker exec build /bin/bash -c "cd $BUILD && dpkg -i libsplash*.deb"
  - docker exec build ls -hal /usr/share/pyshared/
# compile examples/
  - docker exec build /bin/bash -c "cd $BUILD && rm -rf * && CXXFLAGS='-Werror' CXX=$CXX CC=$CC cmake -DCMAKE_BUILD_TYPE=Debug -DWITH_MPI=$SPLASHMPI $SRC/examples"
  - docker exec build /bin/bash -c "cd $BUILD && make"
# compile and run tests/
  - docker exec build /bin/bash -c "cd $BUILD && rm -rf * && CXXFLAGS='-Werror' CXX=$CXX CC=$CC cmake -DCMAKE_BUILD_TYPE=Debug -DWITH_MPI=$SPLASHMPI $SRC/tests"
  - docker exec build /bin/bash -c "cd $BUILD && make"
# run tests
  - docker exec build $SRC/tests/run_tests $BUILD
  - docker exec build $SRC/tests/run_parallel_tests $BUILD

before_script:
  - docker pull ubuntu:16.04
  - docker run -it -d --name build ubuntu bash
  - if [ "$SPLASHMPI" == "ON" ]; then export APTMPI="libopenmpi-dev openmpi-bin"; fi
  - if [ "$SPLASHPARALLEL" == "ON" ]; then export APTHDF5="libhdf5-openmpi-10 libhdf5-openmpi-dev"; else export APTHDF5="libhdf5-serial-dev"; fi
  - docker exec build apt-get update
  - docker exec build apt-get remove -qq libhdf5*
  - docker exec build apt-get remove -qq libopenmpi* openmpi-bin || { echo "OpenMPI not installed"; }
  - docker exec build apt-get install -qq -f libcppunit-dev clang cmake
  - docker exec build apt-get install -qq -f $APTMPI
  - docker exec build apt-get install -qq -f $APTHDF5
  - docker exec build apt-get install -qq -f python-numpy cython python-pip
  - docker exec build /bin/bash -c "HDF5_DIR=/usr C_INCLUDE_PATH=/usr/lib/openmpi/include pip install --user h5py"
  - docker exec build mkdir -p $BUILD $SRC
  - docker exec build python -c "import numpy; print(numpy.version.version)"
  - docker exec build python -c "import h5py; print(h5py.version.version)"
  - docker cp $SRC build:$SRC/..
  - docker exec build ls -al $SRC
