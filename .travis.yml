language: cpp
sudo: required
dist: trusty

cache:
  apt: true
  directories:
    - $HOME/.cache/spack
    - $HOME/.cache/cmake-3.10.0
  pip: true

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages: &common_deps
      - gfortran
      - libcppunit-dev

env:
  global:
    - BUILD: ~/buildTmp
    - CXXFLAGS: "-Wall -Wextra -Woverloaded-virtual -Wshadow"
    - SPACK_ROOT: $HOME/.cache/spack
    - PATH: $PATH:$HOME/.cache/spack/bin

matrix:
  include:
    # GCC 4.8.5
    - env:
        - SPLASHPARALLEL=ON SPLASHMPI=ON
      compiler: gcc
      addons: &mpi_deps
        apt:
          packages:
            - *common_deps
            - libopenmpi-dev
            - openmpi-bin
    - env:
        - SPLASHPARALLEL=OFF SPLASHMPI=ON
      compiler: gcc
      addons: *mpi_deps
    - env:
        - SPLASHPARALLEL=OFF SPLASHMPI=OFF
      compiler: gcc
    # Clang 5.0.0
    - env:
        - SPLASHPARALLEL=ON SPLASHMPI=ON
      compiler: clang
      addons: *mpi_deps
    - env:
        - SPLASHPARALLEL=OFF SPLASHMPI=ON
      compiler: clang
      addons: *mpi_deps

    - env:
        - SPLASHPARALLEL=OFF SPLASHMPI=OFF
      compiler: clang

install:
  - SPACK_FOUND=$(which spack >/dev/null && { echo 0; } || { echo 1; })
  - if [ $SPACK_FOUND -ne 0 ]; then
      mkdir -p $SPACK_ROOT &&
      git clone --depth 50 https://github.com/spack/spack.git $SPACK_ROOT &&
      cp $TRAVIS_BUILD_DIR/.travis/spack/*.yaml
         $SPACK_ROOT/etc/spack/ &&
      spack bootstrap;
    fi
  - source /etc/profile &&
    source $SPACK_ROOT/share/spack/setup-env.sh
  # required dependencies - CMake 3.10.0
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      if [ ! -f $HOME/.cache/cmake-3.10.0/bin/cmake ]; then
        wget -O cmake.sh https://cmake.org/files/v3.10/cmake-3.10.0-Linux-x86_64.sh &&
        sh cmake.sh --skip-license --exclude-subdir --prefix=$HOME/.cache/cmake-3.10.0 &&
        rm cmake.sh;
      fi;
    elif [ "$TRAVIS_OS_NAME" == "osx" ]; then
      if [ ! -d /Applications/CMake.app/Contents/ ]; then
        curl -L -s -o cmake.dmg https://cmake.org/files/v3.10/cmake-3.10.0-Darwin-x86_64.dmg &&
        yes | hdiutil mount cmake.dmg &&
        sudo cp -R "/Volumes/cmake-3.10.0-Darwin-x86_64/CMake.app" /Applications &&
        hdiutil detach /dev/disk1s1 &&
        rm cmake.dmg;
      fi;
    fi
  - COMPILERSPEC="%$CC"
  - travis_wait spack install
      cmake
      $COMPILERSPEC
  - spack load cmake
  # optional dependencies - OpenMPI
  - if [ $SPLASHMPI == "ON" ]; then
      travis_wait spack install
        openmpi@1.6.5
        $COMPILERSPEC &&
      spack load openmpi@1.6.5 $COMPILERSPEC;
    fi
  # required dependencies - Parallel or Serial HDF5
  - if [ $SPLASHPARALLEL == "ON" ]; then
      travis_wait spack install
        hdf5@1.8.12+mpi ^openmpi@1.6.5
       $COMPILERSPEC &&
      spack load hdf5@1.8.12+mpi ^openmpi@1.6.5 $COMPILERSPEC &&
      spack load zlib $COMPILERSPEC &&
      pip install urllib3[secure] --user &&
      pip install h5py --user;
    else
      travis_wait spack install
        hdf5@1.8.12~mpi
        $COMPILERSPEC &&
      spack load hdf5@1.8.12~mpi $COMPILERSPEC &&
      spack load zlib $COMPILERSPEC &&
      pip install urllib3[secure] --user &&
      pip install h5py --user;
    fi
  - spack clean -a

script:
  - mkdir -p $HOME/build 
  - cd $HOME/build
  - CXXFLAGS=$CXXFLAGS CXX=$CXX CC=$CC
    cmake
      -DCMAKE_BUILD_TYPE=Debug
      -DSplash_USE_MPI=$SPLASHMPI
      -DSplash_USE_PARALLEL=$SPLASHPARALLEL
      -DSplash_HAVE_TESTS=ON
      -DCMAKE_INSTALL_PREFIX=$HOME/splash-test-install
      $TRAVIS_BUILD_DIR
  - make -j 2
  - CTEST_OUTPUT_ON_FAILURE=1 make test
  - make install
  - make package
  # - dpkg -i libsplash*.deb

